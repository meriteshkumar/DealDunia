@model IEnumerable<DealDunia.Web.Areas.Coupon>
@{
    WebGrid grid = new WebGrid(Model, rowsPerPage: 10);    
}

@grid.GetHtml(tableStyle: "table table-hover",
                headerStyle: "success",
                mode: WebGridPagerModes.All,
                firstText: "<<First", previousText: "<Previous", nextText: "Next>", lastText: "Last>>",
                columns: new[]{
                                  grid.Column(format: @<text><button class="btn btn-primary btn-sm map-coupon" value="@item.CouponId">Map</button>
                                                       </text>)
                                 ,grid.Column(format: @<text><button class="btn btn-primary btn-sm display-mode edit-coupon" value="@item.CouponId">Edit</button>
<button class="btn btn-primary btn-sm save-user edit-mode" value="@item.CouponId">Save</button>
<button class="btn btn-primary btn-sm cancel-user edit-mode">Cancel</button></text>)
                                ,grid.Column(columnName:"StoreCategory.StoreCategoryName",header:"Store Category", format: @<text><span class="display-mode">
                                    <label id="lbStoreCategory" style="max-height: 15px;">@(item.StoreCategory == null ? "" : item.StoreCategory.StoreCategoryName)</label>
                                </span>
<div class="divStoreCategoryId edit-mode"></div></text>, canSort:true) 
                                 ,grid.Column(columnName:"Category",header:"Coupon Category", canSort:true)                                 
                                 ,grid.Column(columnName:"StoreSource.StoreSourceName",header:"Store Source", canSort:false) 
                                 ,grid.Column(header:"Store", format: @<text>@DealDunia.Web.Areas.Admin.Controllers.CouponsController.GetStoreName(item.StoreSourceId,item.OfferId)</text>)                                 
                                ,grid.Column(columnName:"OfferName",header:"Offer Name", canSort:true) 
                                ,grid.Column(columnName:"CouponTitle",header:"Title", canSort:false)                                 
                                ,grid.Column(columnName:"OfferType",header:"Offer Type", canSort:false) 
                                ,grid.Column(columnName:"CouponCode",header:"Coupon Code", canSort:false) 
                                ,grid.Column(columnName:"Status",header:"Status", canSort:false) 
                                ,grid.Column(columnName:"Featured",header:"Featured", canSort:false) 
                                ,grid.Column(columnName:"Exclusive",header:"Exclusive", canSort:false) 
                                
                              }
)
@*<input type="hidden" name="storeSourceId" id="storeSourceId"/>
<input type="hidden" name="storeCategoryId" id="storeCategoryId" />
<input type="hidden" name="featured" id="featured" />
<input type="hidden" name="status" id="status" />
<input type="hidden" name="offerType" id="offerType" />
<input type="hidden" name="store" id="store" />*@

<script type="text/javascript">
    $(document).ready(function () {
        var settings = {
            storeCategoryURL: '@Url.Action("_StoreCategoryDropDown", "ExclusiveDeal")',
            editCouponCategoryURL: '@Url.Action("EditCoupon", "Coupons")',
            editCouponURL: '@Url.Action("_EditCoupon", "Coupons")'
        };

        $('.edit-mode').hide();

        callAjaxURLWithSingleParam(settings.storeCategoryURL, { controlName: 'StoreCategoryId' })
            .done(function (data) {
                $(".divStoreCategoryId").html(data);
            }).fail(function () {
                //TODO:Debugging
            });

        $(".edit-coupon, .cancel-user").on("click", function () {            
            var tr = $(this).parents('tr:first');

            var editVal = $('#StoreCategoryId option').filter(function () {
                                                    return $(this).text() == $("#lbStoreCategory").text();
            }).val();

            tr.find("#StoreCategoryId").val(editVal);
            tr.find('.edit-mode, .display-mode').toggle();
        });

        $(".map-coupon").on("click", function () {
            var couponId = $(this).val();

            callAjaxURLWithSingleParam(settings.editCouponURL, { CouponId: couponId })
                .done(function (coupon) {
                    $(".modal-dialog").html(coupon);
                    $("#myModal").modal();

                    //Need to register unobtrusive validation for dynamically added elements
                    var form = $("#myForm");
                    form.removeData('validator');
                    form.removeData('unobtrusiveValidation');
                    $.validator.unobtrusive.parse(form);
                }).fail(function () {
                    //TODO:Debugging
                });
        });

        $('.save-user').on('click', function () {
            var tr = $(this).parents('tr:first');
            var storeCategoryId = tr.find("#StoreCategoryId").val();
            var storeCategoryName = tr.find("#StoreCategoryId option:selected").text();

            var couponId = $(this).val();

            var couponModel = {
                couponId: couponId,
                storeCateogoryId: storeCategoryId
            }

            callAjaxPostURLWithSingleParam(settings.editCouponCategoryURL, couponModel)
                .done(function (data) { }).fail(function () {
                    //Need to register unobtrusive validation for dynamically added elements
                    var form = $("#myForm");
                    form.removeData('validator');
                    form.removeData('unobtrusiveValidation');
                    $.validator.unobtrusive.parse(form);
                }).fail(function () {
                    //TODO:Debugging
                });

            tr.find("#lbStoreCategory").text(storeCategoryName);

            tr.find('.edit-mode, .display-mode').toggle();
        });
    });
</script>
